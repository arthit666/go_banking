// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/accounts/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get details of all accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get all accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/account.AccountResponseList"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new account with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new account",
                "parameters": [
                    {
                        "description": "Create account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/account.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/accounts/transfer/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Transfer funds from one accounts to another with account number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Transfer funds between accounts",
                "parameters": [
                    {
                        "description": "AccountTransferRequest data",
                        "name": "transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.AccountTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/account.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/accounts/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get account by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get account by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/account.AccountResponse"
                            }
                        }
                    }
                }
            }
        },
        "/login/": {
            "post": {
                "description": "Authenticate account and obtain access and refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login account",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.TokenResponse"
                        }
                    }
                }
            }
        },
        "/pockets/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get details of all pocket",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pockets"
                ],
                "summary": "Get all pocket",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pocket.Pocket"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new pocket with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pockets"
                ],
                "summary": "Create a new pocket",
                "parameters": [
                    {
                        "description": "PocketCreate data",
                        "name": "pocket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pocket.PocketCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pocket.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/pockets/transfer/": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Transfer funds from one pocket to another with pocket id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pockets"
                ],
                "summary": "Transfer funds between pockets",
                "parameters": [
                    {
                        "description": "PocketTransferRequest data",
                        "name": "transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pocket.PocketTransferRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pocket.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/pockets/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get pocket by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pockets"
                ],
                "summary": "Get pocket by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pocket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a pocket with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pockets"
                ],
                "summary": "Update a pocket",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pocket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PocketUpdate data",
                        "name": "pocket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/pocket.PocketUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/pocket.SuccessResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a pocket by ID",
                "tags": [
                    "pockets"
                ],
                "summary": "Delete a pocket",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pocket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pocket.SuccessResponse"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "get": {
                "description": "Refresh the access token using a valid refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/account.TokenResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.AccountRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "account.AccountResponse": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "balance": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "pocket_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pocket.Pocket"
                    }
                }
            }
        },
        "account.AccountResponseList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/account.AccountResponse"
                    }
                },
                "total_count": {
                    "type": "integer"
                },
                "total_page": {
                    "type": "integer"
                }
            }
        },
        "account.AccountTransferRequest": {
            "type": "object",
            "required": [
                "amount",
                "to"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "account.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "account.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "account.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "pocket.Pocket": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "create_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "pocket.PocketCreate": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pocket.PocketTransferRequest": {
            "type": "object",
            "required": [
                "amount",
                "from",
                "to"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "from": {
                    "type": "integer"
                },
                "to": {
                    "type": "integer"
                }
            }
        },
        "pocket.PocketUpdate": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "pocket.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Banking API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
